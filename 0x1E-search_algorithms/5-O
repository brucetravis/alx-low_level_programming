#include <stdio.h>

/**
 * binary_search - Search for a value in a sorted array using binary search
 * @array: Pointer to the first element of the array
 * @size: Number of elements in the array
 * @value: Value to search for
 *
 * Return: Index where value is located, or -1 if not found
 */
int binary_search(int *array, size_t size, int value)
{
if (array == NULL)
return -1;

size_t left = 0;
size_t right = size - 1;

while (left <= right)
{
size_t mid = (left + right) / 2;

if (array[mid] == value)
return mid;

if (array[mid] < value)
left = mid + 1;
else
right = mid - 1;
}

return (-1);
}

/**
 * main - Entry point of the program
 *
 * This function initializes a sorted array, specifies a target value, and
 * calls the binary_search function to find the index of the target value in
 * the array. The result is then printed to the console, indicating whether
 * the target value was found or not.
 *
 * Return: Always 0 (Success)
 */
int main(void)
{
int array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
size_t size = sizeof(array) / sizeof(array[0]);
int target = 6;


int result = binary_search(array, size, target);

if (result != -1)
printf("Element %d found at index %d\n", target, result);
else
printf("Element %d not found in the array\n", target);

return (0);
}
